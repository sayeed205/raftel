/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedSearchRouteImport } from './routes/_authenticated/search'
import { Route as AuthenticatedRssRouteImport } from './routes/_authenticated/rss'
import { Route as AuthenticatedLogsRouteImport } from './routes/_authenticated/logs'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedTorrentsIndexRouteImport } from './routes/_authenticated/torrents/index'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedTorrentsHashRouteImport } from './routes/_authenticated/torrents/$hash'
import { Route as AuthenticatedSettingsWebUiRouteImport } from './routes/_authenticated/settings/web-ui'
import { Route as AuthenticatedSettingsSpeedRouteImport } from './routes/_authenticated/settings/speed'
import { Route as AuthenticatedSettingsRssRouteImport } from './routes/_authenticated/settings/rss'
import { Route as AuthenticatedSettingsNotificationsRouteImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDownloadsRouteImport } from './routes/_authenticated/settings/downloads'
import { Route as AuthenticatedSettingsConnectionRouteImport } from './routes/_authenticated/settings/connection'
import { Route as AuthenticatedSettingsBitTorrentRouteImport } from './routes/_authenticated/settings/bit-torrent'
import { Route as AuthenticatedSettingsAdvancedRouteImport } from './routes/_authenticated/settings/advanced'
import { Route as AuthenticatedSettingsAccountRouteImport } from './routes/_authenticated/settings/account'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSearchRoute = AuthenticatedSearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedRssRoute = AuthenticatedRssRouteImport.update({
  id: '/rss',
  path: '/rss',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedLogsRoute = AuthenticatedLogsRouteImport.update({
  id: '/logs',
  path: '/logs',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedTorrentsIndexRoute =
  AuthenticatedTorrentsIndexRouteImport.update({
    id: '/torrents/',
    path: '/torrents/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedTorrentsHashRoute =
  AuthenticatedTorrentsHashRouteImport.update({
    id: '/torrents/$hash',
    path: '/torrents/$hash',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsWebUiRoute =
  AuthenticatedSettingsWebUiRouteImport.update({
    id: '/web-ui',
    path: '/web-ui',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsSpeedRoute =
  AuthenticatedSettingsSpeedRouteImport.update({
    id: '/speed',
    path: '/speed',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsRssRoute =
  AuthenticatedSettingsRssRouteImport.update({
    id: '/rss',
    path: '/rss',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsDownloadsRoute =
  AuthenticatedSettingsDownloadsRouteImport.update({
    id: '/downloads',
    path: '/downloads',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsConnectionRoute =
  AuthenticatedSettingsConnectionRouteImport.update({
    id: '/connection',
    path: '/connection',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsBitTorrentRoute =
  AuthenticatedSettingsBitTorrentRouteImport.update({
    id: '/bit-torrent',
    path: '/bit-torrent',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAdvancedRoute =
  AuthenticatedSettingsAdvancedRouteImport.update({
    id: '/advanced',
    path: '/advanced',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/logs': typeof AuthenticatedLogsRoute
  '/rss': typeof AuthenticatedRssRoute
  '/search': typeof AuthenticatedSearchRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/advanced': typeof AuthenticatedSettingsAdvancedRoute
  '/settings/bit-torrent': typeof AuthenticatedSettingsBitTorrentRoute
  '/settings/connection': typeof AuthenticatedSettingsConnectionRoute
  '/settings/downloads': typeof AuthenticatedSettingsDownloadsRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/settings/rss': typeof AuthenticatedSettingsRssRoute
  '/settings/speed': typeof AuthenticatedSettingsSpeedRoute
  '/settings/web-ui': typeof AuthenticatedSettingsWebUiRoute
  '/torrents/$hash': typeof AuthenticatedTorrentsHashRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/torrents': typeof AuthenticatedTorrentsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/logs': typeof AuthenticatedLogsRoute
  '/rss': typeof AuthenticatedRssRoute
  '/search': typeof AuthenticatedSearchRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/advanced': typeof AuthenticatedSettingsAdvancedRoute
  '/settings/bit-torrent': typeof AuthenticatedSettingsBitTorrentRoute
  '/settings/connection': typeof AuthenticatedSettingsConnectionRoute
  '/settings/downloads': typeof AuthenticatedSettingsDownloadsRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/settings/rss': typeof AuthenticatedSettingsRssRoute
  '/settings/speed': typeof AuthenticatedSettingsSpeedRoute
  '/settings/web-ui': typeof AuthenticatedSettingsWebUiRoute
  '/torrents/$hash': typeof AuthenticatedTorrentsHashRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/torrents': typeof AuthenticatedTorrentsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/logs': typeof AuthenticatedLogsRoute
  '/_authenticated/rss': typeof AuthenticatedRssRoute
  '/_authenticated/search': typeof AuthenticatedSearchRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/advanced': typeof AuthenticatedSettingsAdvancedRoute
  '/_authenticated/settings/bit-torrent': typeof AuthenticatedSettingsBitTorrentRoute
  '/_authenticated/settings/connection': typeof AuthenticatedSettingsConnectionRoute
  '/_authenticated/settings/downloads': typeof AuthenticatedSettingsDownloadsRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/settings/rss': typeof AuthenticatedSettingsRssRoute
  '/_authenticated/settings/speed': typeof AuthenticatedSettingsSpeedRoute
  '/_authenticated/settings/web-ui': typeof AuthenticatedSettingsWebUiRoute
  '/_authenticated/torrents/$hash': typeof AuthenticatedTorrentsHashRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/torrents/': typeof AuthenticatedTorrentsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/settings'
    | '/dashboard'
    | '/logs'
    | '/rss'
    | '/search'
    | '/settings/account'
    | '/settings/advanced'
    | '/settings/bit-torrent'
    | '/settings/connection'
    | '/settings/downloads'
    | '/settings/notifications'
    | '/settings/rss'
    | '/settings/speed'
    | '/settings/web-ui'
    | '/torrents/$hash'
    | '/settings/'
    | '/torrents'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/dashboard'
    | '/logs'
    | '/rss'
    | '/search'
    | '/settings/account'
    | '/settings/advanced'
    | '/settings/bit-torrent'
    | '/settings/connection'
    | '/settings/downloads'
    | '/settings/notifications'
    | '/settings/rss'
    | '/settings/speed'
    | '/settings/web-ui'
    | '/torrents/$hash'
    | '/settings'
    | '/torrents'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/settings'
    | '/_authenticated/dashboard'
    | '/_authenticated/logs'
    | '/_authenticated/rss'
    | '/_authenticated/search'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/advanced'
    | '/_authenticated/settings/bit-torrent'
    | '/_authenticated/settings/connection'
    | '/_authenticated/settings/downloads'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/settings/rss'
    | '/_authenticated/settings/speed'
    | '/_authenticated/settings/web-ui'
    | '/_authenticated/torrents/$hash'
    | '/_authenticated/settings/'
    | '/_authenticated/torrents/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/search': {
      id: '/_authenticated/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AuthenticatedSearchRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/rss': {
      id: '/_authenticated/rss'
      path: '/rss'
      fullPath: '/rss'
      preLoaderRoute: typeof AuthenticatedRssRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/logs': {
      id: '/_authenticated/logs'
      path: '/logs'
      fullPath: '/logs'
      preLoaderRoute: typeof AuthenticatedLogsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/torrents/': {
      id: '/_authenticated/torrents/'
      path: '/torrents'
      fullPath: '/torrents'
      preLoaderRoute: typeof AuthenticatedTorrentsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/torrents/$hash': {
      id: '/_authenticated/torrents/$hash'
      path: '/torrents/$hash'
      fullPath: '/torrents/$hash'
      preLoaderRoute: typeof AuthenticatedTorrentsHashRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/web-ui': {
      id: '/_authenticated/settings/web-ui'
      path: '/web-ui'
      fullPath: '/settings/web-ui'
      preLoaderRoute: typeof AuthenticatedSettingsWebUiRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/speed': {
      id: '/_authenticated/settings/speed'
      path: '/speed'
      fullPath: '/settings/speed'
      preLoaderRoute: typeof AuthenticatedSettingsSpeedRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/rss': {
      id: '/_authenticated/settings/rss'
      path: '/rss'
      fullPath: '/settings/rss'
      preLoaderRoute: typeof AuthenticatedSettingsRssRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/downloads': {
      id: '/_authenticated/settings/downloads'
      path: '/downloads'
      fullPath: '/settings/downloads'
      preLoaderRoute: typeof AuthenticatedSettingsDownloadsRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/connection': {
      id: '/_authenticated/settings/connection'
      path: '/connection'
      fullPath: '/settings/connection'
      preLoaderRoute: typeof AuthenticatedSettingsConnectionRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/bit-torrent': {
      id: '/_authenticated/settings/bit-torrent'
      path: '/bit-torrent'
      fullPath: '/settings/bit-torrent'
      preLoaderRoute: typeof AuthenticatedSettingsBitTorrentRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/advanced': {
      id: '/_authenticated/settings/advanced'
      path: '/advanced'
      fullPath: '/settings/advanced'
      preLoaderRoute: typeof AuthenticatedSettingsAdvancedRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
  }
}

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAdvancedRoute: typeof AuthenticatedSettingsAdvancedRoute
  AuthenticatedSettingsBitTorrentRoute: typeof AuthenticatedSettingsBitTorrentRoute
  AuthenticatedSettingsConnectionRoute: typeof AuthenticatedSettingsConnectionRoute
  AuthenticatedSettingsDownloadsRoute: typeof AuthenticatedSettingsDownloadsRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsRssRoute: typeof AuthenticatedSettingsRssRoute
  AuthenticatedSettingsSpeedRoute: typeof AuthenticatedSettingsSpeedRoute
  AuthenticatedSettingsWebUiRoute: typeof AuthenticatedSettingsWebUiRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAdvancedRoute: AuthenticatedSettingsAdvancedRoute,
    AuthenticatedSettingsBitTorrentRoute: AuthenticatedSettingsBitTorrentRoute,
    AuthenticatedSettingsConnectionRoute: AuthenticatedSettingsConnectionRoute,
    AuthenticatedSettingsDownloadsRoute: AuthenticatedSettingsDownloadsRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsRssRoute: AuthenticatedSettingsRssRoute,
    AuthenticatedSettingsSpeedRoute: AuthenticatedSettingsSpeedRoute,
    AuthenticatedSettingsWebUiRoute: AuthenticatedSettingsWebUiRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedLogsRoute: typeof AuthenticatedLogsRoute
  AuthenticatedRssRoute: typeof AuthenticatedRssRoute
  AuthenticatedSearchRoute: typeof AuthenticatedSearchRoute
  AuthenticatedTorrentsHashRoute: typeof AuthenticatedTorrentsHashRoute
  AuthenticatedTorrentsIndexRoute: typeof AuthenticatedTorrentsIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedLogsRoute: AuthenticatedLogsRoute,
  AuthenticatedRssRoute: AuthenticatedRssRoute,
  AuthenticatedSearchRoute: AuthenticatedSearchRoute,
  AuthenticatedTorrentsHashRoute: AuthenticatedTorrentsHashRoute,
  AuthenticatedTorrentsIndexRoute: AuthenticatedTorrentsIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
